---
layout: post
title:  "一些基本概念"
date:   2023-09-25 20:14:08 -0700
categories: [Fault-Tolerant-Message-Passing-Distributed-Systems]
---

本文章属于以下分类：
{% for category in page.categories %}
- {{ category }}
{% endfor %}

+ 分布式系统由一组分布式计算单元（抽象为process）以及它们之间的通信介质（communication medium）构成。本书中，processes集合是静态的。
+ **process**之间通过在**channel**上发送、接受消息来通信。channel可以是：
  + **reliable**：消息没有丢失、被创建、改动、重复
  + 非**reliable**
  + **synchronous**： 消息的传输延时有上限
  + **asynchronous**： 消息传输延时无上限
  + 满足其他性质：例如*FIFO*
+ 分布式算法由n个自动机（automata）构成，每个自动机可以*send*, *receive*。约定每个process一次只处理一条message。分布式算法可以：
  + **synchronous**：存在一个外部全局时钟*R*，来抽象代表轮。每轮中发出的message必须在同一轮中被接受。
  + **asynchronous**：不存在全局时钟，process的progress由自身以及收到的消息来得到。
+ **event**: 分布式系统中某个process的某一步
+ **execution**： 由**event**集合形成的偏序关系
+ 分布式系统中进程会出错：
  + **crash failure**: process突然崩溃或停止响应
  + **byzantine failure**: process以没有按照预定的方式执行造成的失败
+ 分布式系统问题如何定义：
  + **liveness property** 和 **termination property**： make sure something happen
  + **other properties(validity, integrity)**: make sure nothing bad happen
+ 本书中主要分布式计算模型（n是process的个数，t是可能出错的process的个数的上限：
  
  |  | crash failure model | byzantine failure model |
  |---|---|---|
  | asynchronous model | CAMP<sub>n,t</sub> | BAMP<sub>n,t</sub> |
  | synchronous model | CSMP<sub>n,t</sub> | BSMP<sub>n,t</sub> |

+ 计算模型还能加减条件，比如：
  + CAMP<sub>n,t</sub>[t &lt; n/2]（系统中永远不会有超过半数的节点crash）
  + CAMP<sub>n,t</sub>[-FC]（channel不再是reliable而只是fair channel）